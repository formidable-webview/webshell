(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{151:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),s=b(r),f=n,m=s["".concat(o,".").concat(f)]||s[f]||d[f]||c;return r?a.a.createElement(m,p(p({ref:t},l),{},{components:r})):a.a.createElement(m,p({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,o=new Array(c);o[0]=f;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var l=2;l<c;l++)o[l]=r[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},75:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return p})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return b}));var n=r(2),a=r(6),c=(r(0),r(151)),o={id:"extractwebhandlerspecfromdef",title:"Type alias: ExtractWebHandlerSpecFromDef",sidebar_label:"ExtractWebHandlerSpecFromDef",hide_title:!0},p={unversionedId:"api/types/extractwebhandlerspecfromdef",id:"api/types/extractwebhandlerspecfromdef",isDocsHomePage:!1,title:"Type alias: ExtractWebHandlerSpecFromDef",description:"Type alias: ExtractWebHandlerSpecFromDef&60;W>",source:"@site/docs/api/types/extractwebhandlerspecfromdef.md",slug:"/api/types/extractwebhandlerspecfromdef",permalink:"/webshell/docs/api/types/extractwebhandlerspecfromdef",editUrl:"https://github.com/formidable-webview/webshell/tree/master/apps/website/docs/docs/api/types/extractwebhandlerspecfromdef.md",version:"current",sidebar_label:"ExtractWebHandlerSpecFromDef",sidebar:"someSidebar",previous:{title:"Type alias: ExtractPropsFromSpecs",permalink:"/webshell/docs/api/types/extractpropsfromspecs"},next:{title:"Type alias: ExtractWebHandlerSpecsFromFeature",permalink:"/webshell/docs/api/types/extractwebhandlerspecsfromfeature"}},i=[],l={rightToc:i};function b(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"type-alias-extractwebhandlerspecfromdefw"},"Type alias: ExtractWebHandlerSpecFromDef","<",Object(c.b)("strong",{parentName:"h1"},"W"),">"),Object(c.b)("p",null,"\u01ac  ",Object(c.b)("strong",{parentName:"p"},"ExtractWebHandlerSpecFromDef"),"<","W>: W ",Object(c.b)("em",{parentName:"p"},"extends")," WebHandlerDefinition","<",Object(c.b)("em",{parentName:"p"},"infer")," I, ",Object(c.b)("em",{parentName:"p"},"infer")," P> ? {} : never"),Object(c.b)("p",null,"A lookup type to extract Web Handler specs from ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/webshell/docs/api/interfaces/webhandlerdefinition"}),"WebHandlerDefinition"),"."),Object(c.b)("h4",{id:"type-parameters"},"Type parameters:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"W")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The type for the webhandler definition to which specs should be built.")))))}b.isMDXComponent=!0}}]);