(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{137:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),o=(n(0),n(151)),i=n(158),c=n(155),s={id:"faq",sidebar_label:"FAQ",title:"Frequently Asked Questions"},l={unversionedId:"faq",id:"faq",isDocsHomePage:!1,title:"Frequently Asked Questions",description:"Can I get the ref of the WebView?",source:"@site/docs/faq.mdx",slug:"/faq",permalink:"/webshell/docs/faq",editUrl:"https://github.com/formidable-webview/webshell/tree/master/apps/website/docs/docs/faq.mdx",version:"current",lastUpdatedBy:"Jules Sam. Randolph",lastUpdatedAt:1602288385,sidebar_label:"FAQ",sidebar:"someSidebar",previous:{title:"Function: useWebshell",permalink:"/webshell/docs/api/functions/usewebshell"}},p=[{value:"Can I get the <code>ref</code> of the <code>WebView</code>?",id:"can-i-get-the-ref-of-the-webview",children:[]},{value:"Can I set Feature Options Dynamically?",id:"can-i-set-feature-options-dynamically",children:[]},{value:"Can I Pass Custom Props to <code>WebViews</code>?",id:"can-i-pass-custom-props-to-webviews",children:[]},{value:"Will a Shell Pass <code>injectedJavaScript</code> Prop?",id:"will-a-shell-pass-injectedjavascript-prop",children:[]},{value:"Will a Shell Account for <code>onMessage</code> Handler Prop?",id:"will-a-shell-account-for-onmessage-handler-prop",children:[]},{value:"Isn&#39;t <code>HandleOnLinkPressFeature</code> redundant with <code>onNavigationStateChange</code> prop?",id:"isnt-handleonlinkpressfeature-redundant-with-onnavigationstatechange-prop",children:[]}],u={rightToc:p};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"can-i-get-the-ref-of-the-webview"},"Can I get the ",Object(o.b)("inlineCode",{parentName:"h2"},"ref")," of the ",Object(o.b)("inlineCode",{parentName:"h2"},"WebView"),"?"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Yes"),". ",Object(o.b)("inlineCode",{parentName:"p"},"Webshell")," component already forwards the reference of the underlying ",Object(o.b)(i.b,{mdxType:"WebView"}),". Just use ",Object(o.b)("inlineCode",{parentName:"p"},"ref")," prop as you would with a ",Object(o.b)(i.b,{mdxType:"WebView"}),"!"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"function MyComponent() {\n  const webViewRef = useRef(null);\n  return <Webshell ref={webViewRef} />;\n}\n")),Object(o.b)("h2",{id:"can-i-set-feature-options-dynamically"},"Can I set Feature Options Dynamically?"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Yes"),". ",Object(o.b)("inlineCode",{parentName:"p"},"React.useMemo")," is your friend:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"function MyComponent({ option, ...props }) {\n  const Webshell = React.useMemo(() =>\n    makeWebshell(WebView, new Feature({ dynamicOption: option })),\n    [option]\n  );\n  return <Webshell {...props} />;\n}\n")),Object(o.b)("h2",{id:"can-i-pass-custom-props-to-webviews"},"Can I Pass Custom Props to ",Object(o.b)("inlineCode",{parentName:"h2"},"WebViews"),"?"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Yes"),". ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/implementing-features#native-to-web-communication"}),"Read this guide: Native to Web Communication"),"."),Object(o.b)("h2",{id:"will-a-shell-pass-injectedjavascript-prop"},"Will a Shell Pass ",Object(o.b)("inlineCode",{parentName:"h2"},"injectedJavaScript")," Prop?"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Yes"),". ",Object(o.b)(c.a,{reference:"WebshellComponent",type:"alias",mdxType:"APIReference"})," will pass any\n",Object(o.b)("inlineCode",{parentName:"p"},"injectedJavaScript")," prop to the underlying ",Object(o.b)(i.b,{mdxType:"WebView"}),", along with scripts\nbundled from features."),Object(o.b)("h2",{id:"will-a-shell-account-for-onmessage-handler-prop"},"Will a Shell Account for ",Object(o.b)("inlineCode",{parentName:"h2"},"onMessage")," Handler Prop?"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Yes"),". It will intercept specific events created by features, and hoist any\nmessage which doesn't comply to very specific requirements towards the controlling\ncomponent."),Object(o.b)("h2",{id:"isnt-handleonlinkpressfeature-redundant-with-onnavigationstatechange-prop"},"Isn't ",Object(o.b)("inlineCode",{parentName:"h2"},"HandleOnLinkPressFeature")," redundant with ",Object(o.b)("inlineCode",{parentName:"h2"},"onNavigationStateChange")," prop?"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Somehow"),". But ",Object(o.b)(c.a,{reference:"HandleOnLinkPressFeature",type:"variable",mdxType:"APIReference"})," is more reliable. On Android, calling ",Object(o.b)("inlineCode",{parentName:"p"},"webView.stopLoading()")," ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://stackoverflow.com/a/54115883/2779871"}),"will disable further taps from the same page"),", leading to a lot of undesired behaviors."))}b.isMDXComponent=!0},151:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return n?a.a.createElement(f,c(c({ref:t},l),{},{components:n})):a.a.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},152:function(e,t,n){"use strict";var r=n(0),a=n(21);t.a=function(){const e=Object(r.useContext)(a.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},153:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return i}));var r=n(152),a=n(157);function o(){const{siteConfig:{baseUrl:e="/",url:t}={}}=Object(r.a)();return{withBaseUrl:(n,r)=>function(e,t,n,{forcePrependBaseUrl:r=!1,absolute:o=!1}={}){if(!n)return n;if(n.startsWith("#"))return n;if(Object(a.b)(n))return n;if(r)return t+n;const i=n.startsWith(t)?n:t+n.replace(/^\//,"");return o?e+i:i}(t,e,n,r)}}function i(e,t={}){const{withBaseUrl:n}=o();return n(e,t)}},155:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return i}));var r=n(0),a=n(153);const o=({reference:e,member:t,type:n})=>r.createElement("span",{className:"api-symbol "+n},e,t?"."+t:""),i=({reference:e,type:t,overrideUrl:n,member:o})=>{const i=o?"#"+o.toLowerCase():"",c="interface"===t?`/docs/api/interfaces/${e.toLowerCase()}${i}`:"class"===t?`/docs/api/classes/${e.toLowerCase()}${i}`:"enum"===t?`/docs/api/enums/${e.toLowerCase()}${i}`:"type"===t||"alias"===t?`/docs/api/types/${e.toLowerCase()}${i}`:"function"===t?`/docs/api/functions/${e.toLowerCase()}${i}`:"variable"===t?`/docs/api/variables/${e.toLowerCase()}${i}`:null;if(null===c)throw new TypeError(`APIReference: ${t} must be one of 'interface', 'class', 'type', 'alias', 'function' or 'variable'.`);return r.createElement("a",{className:"api-ref api-symbol "+t,href:Object(a.a)(n||c)},e,o?"."+o:"")}},157:function(e,t,n){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}))},158:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return c}));var r=n(0),a=n.n(r);const o={webview:"https://github.com/react-native-community/react-native-webview",scrollview:"https://reactnative.dev/docs/scrollview",linking:"https://reactnative.dev/docs/linking",__dev__:"https://reactnative.dev/docs/javascript-environment.html"},i=({name:e,type:t})=>{const n=o[e&&e.toLowerCase()],r=n?e:"MISSING REFERENCE FOR "+e;return a.a.createElement("a",{className:"api-ref api-symbol "+t,href:n},r)},c=()=>a.a.createElement(i,{name:"WebView",type:"class"})}}]);