(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{151:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return y}));var r=n(0),a=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),u=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=u(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=u(n),p=r,y=b["".concat(o,".").concat(p)]||b[p]||m[p]||l;return n?a.a.createElement(y,i(i({ref:t},c),{},{components:n})):a.a.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},162:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);const a=()=>r.createElement("span",{className:"webshell"},"webshell")},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),l=(n(0),n(151)),o=n(162),i={title:"The Future of Webshell (v3+)",author:"Jules Sam. Randolph",author_title:"Freelance React developer",author_url:"https://github.com/jsamr",author_image_url:"https://avatars1.githubusercontent.com/u/3646758?s=460&u=f699d25514156aa9b975837a52daf135449e43d8&v=4",tags:["webshell","react native","future"]},s={permalink:"/webshell/blog/2020/09/17/the-future-of-webshell",editUrl:"https://github.com/formidable-webview/webshell/tree/master/apps/website/blog/blog/2020-09-17-the-future-of-webshell.mdx",source:"@site/blog/2020-09-17-the-future-of-webshell.mdx",description:"This post will be regularly updated to track the main features scheduled for .",date:"2020-09-17T00:00:00.000Z",tags:[{label:"webshell",permalink:"/webshell/blog/tags/webshell"},{label:"react native",permalink:"/webshell/blog/tags/react-native"},{label:"future",permalink:"/webshell/blog/tags/future"}],title:"The Future of Webshell (v3+)",readingTime:1.485,truncated:!1},c=[{value:"Asynchronous Web to Native Communication",id:"asynchronous-web-to-native-communication",children:[{value:"Native Usage",id:"native-usage",children:[]},{value:"Native Implementation",id:"native-implementation",children:[]},{value:"Web Implementation",id:"web-implementation",children:[]}]},{value:"Asynchronous Native to Web Communication",id:"asynchronous-native-to-web-communication",children:[{value:"Native Usage",id:"native-usage-1",children:[]},{value:"Native Implementation",id:"native-implementation-1",children:[]},{value:"Web Implementation",id:"web-implementation-1",children:[]}]},{value:"Feature Cardinality",id:"feature-cardinality",children:[]}],u={rightToc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"This post will be regularly updated to track the main features scheduled for ",Object(l.b)(o.a,{mdxType:"Webshell"}),"."),Object(l.b)("h2",{id:"asynchronous-web-to-native-communication"},"Asynchronous Web to Native Communication"),Object(l.b)("h3",{id:"native-usage"},"Native Usage"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="MyComponent.jsx"',title:'"MyComponent.jsx"'}),"import * as React from 'react';\nimport { makeWebshell } from '@formidable-webview/webshell';\nimport { AsyncFlatteryFeature } from './AsyncFlatteryFeature';\n\nconst flatters = new AsyncFlatteryFeature();\nconst Webshell = makeWebshell(WebView, flatters);\n\n// This function must return a promise!\nfunction handleAsyncFlattery() {\n  return Promise.resolve('I love you too!');\n}\n\nexport const MyComponent = (props) => {\n  return <Webshell onAsyncWebFlattery={handleFlattery} />;\n};\n")),Object(l.b)("h3",{id:"native-implementation"},"Native Implementation"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js",metastring:'title="AsyncFlatteryFeature.js"',title:'"AsyncFlatteryFeature.js"'}),"import { FeatureBuilder } from '@formidable-webview/webshell';\nimport script from './AsyncFlatteryFeature.webjs';\n\nexport const AsyncFlatteryFeature = new FeatureBuilder({\n  script,\n  defaultOptions: {},\n  identifier: 'org.myorg/webshell.async-flattery'\n})\n  .withAsyncShellHandler('onAsyncWebFlattery', 'flatters')\n  .build();\n")),Object(l.b)("h3",{id:"web-implementation"},"Web Implementation"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js",metastring:'title="AsyncFlatteryFeature.webjs"',title:'"AsyncFlatteryFeature.webjs"'}),"function AsyncFlatteryFeature(context) {\n  context\n    .postAsyncMessageToShell('flatters', 'I really like you.')\n    .then(function (response) {\n      console.info(response);\n      // 'I love you too!'\n    });\n}\n")),Object(l.b)("h2",{id:"asynchronous-native-to-web-communication"},"Asynchronous Native to Web Communication"),Object(l.b)("h3",{id:"native-usage-1"},"Native Usage"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="MyComponent.jsx"',title:'"MyComponent.jsx"'}),"import * as React from 'react';\nimport { makeWebshell } from '@formidable-webview/webshell';\nimport { AsyncFlatteryFeature } from './AsyncFlatteryFeature';\n\nconst flatteryFeature = new AsyncFlatteryFeature();\nconst Webshell = makeWebshell(WebView, flatteryFeature);\n\nexport const MyComponent = (props) => {\n  const webHandleRef = React.useRef();\n  React.useEffect(() => {\n    // props.user must be JSON-serializable\n    webHandleRef.current?\n      .postAsyncMessageToWeb(flatteryFeature, 'flatters', 'I really like you!')\n      .then(response => console.info(response));\n  }, []);\n  return <Webshell webHandleRef={webHandleRef} />;\n};\n")),Object(l.b)("h3",{id:"native-implementation-1"},"Native Implementation"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js",metastring:'title="AsyncFlatteryFeature.js"',title:'"AsyncFlatteryFeature.js"'}),"import { FeatureBuilder } from '@formidable-webview/webshell';\nimport script from './AsyncFlatteryFeature.webjs';\n\nexport const AsyncFlatteryFeature = new FeatureBuilder({\n  script,\n  defaultOptions: {},\n  identifier: 'org.myorg/webshell.async-flattery'\n})\n  .withAsyncWebHandler('flatters')\n  .build();\n")),Object(l.b)("h3",{id:"web-implementation-1"},"Web Implementation"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js",metastring:'title="AsyncFlatteryFeature.webjs"',title:'"AsyncFlatteryFeature.webjs"'}),"function AsyncFlatteryFeature(context) {\n  context.onAsyncShellMessage('flatters', function (message) {\n    return Promise.resolve('I love you too!')\n  });\n}\n")),Object(l.b)("h2",{id:"feature-cardinality"},"Feature Cardinality"),Object(l.b)("p",null,"Specify the cardinality of a feature (how many instances can co-exist). We\nare planning to get inspiration from ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://v2.docusaurus.io/docs/using-plugins#multi-instance-plugins-and-plugin-ids"}),"multi-instance plugins in\ndocusaurus"),"."))}b.isMDXComponent=!0}}]);