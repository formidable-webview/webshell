(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{151:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),i=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,m=u["".concat(o,".").concat(d)]||u[d]||b[d]||a;return r?i.a.createElement(m,s(s({ref:t},l),{},{components:r})):i.a.createElement(m,s({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},90:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(2),i=r(6),a=(r(0),r(151)),o={id:"visualviewportdimensions",title:"Interface: VisualViewportDimensions",sidebar_label:"VisualViewportDimensions",hide_title:!0},s={unversionedId:"api/interfaces/visualviewportdimensions",id:"api/interfaces/visualviewportdimensions",isDocsHomePage:!1,title:"Interface: VisualViewportDimensions",description:"Interface: VisualViewportDimensions",source:"@site/docs/api/interfaces/visualviewportdimensions.md",slug:"/api/interfaces/visualviewportdimensions",permalink:"/webshell/docs/api/interfaces/visualviewportdimensions",editUrl:"https://github.com/formidable-webview/webshell/tree/master/apps/website/docs/docs/api/interfaces/visualviewportdimensions.md",version:"current",sidebar_label:"VisualViewportDimensions",sidebar:"someSidebar",previous:{title:"Interface: UseWebshellParams",permalink:"/webshell/docs/api/interfaces/usewebshellparams"},next:{title:"Interface: WebHandle",permalink:"/webshell/docs/api/interfaces/webhandle"}},c=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"isLegacy",id:"islegacy",children:[]},{value:"scale",id:"scale",children:[]},{value:"visualViewport",id:"visualviewport",children:[]}]}],l={rightToc:c};function p(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"interface-visualviewportdimensions"},"Interface: VisualViewportDimensions"),Object(a.b)("p",null,"An object describing the visual viewport of the ",Object(a.b)("inlineCode",{parentName:"p"},"WebView"),"."),Object(a.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"VisualViewportDimensions"))),Object(a.b)("h2",{id:"properties"},"Properties"),Object(a.b)("h3",{id:"islegacy"},"isLegacy"),Object(a.b)("p",null,"\u2022  ",Object(a.b)("strong",{parentName:"p"},"isLegacy"),": boolean"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"false")," when these values are coming from the VisualViewport API and\n",Object(a.b)("inlineCode",{parentName:"p"},"true"),' when they are "best guess". In legacy mode, be warned that you will\nnot receive frequent updates when the user pinch-zoom.'),Object(a.b)("hr",null),Object(a.b)("h3",{id:"scale"},"scale"),Object(a.b)("p",null,"\u2022  ",Object(a.b)("strong",{parentName:"p"},"scale"),": number"),Object(a.b)("p",null,"The visual viewport scale. Because this API is quite recent, we have a\nfallback strategy to compute scale."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"remarks")),"\nThe other values in this object are already in React Native dpi units."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"visualviewport"},"visualViewport"),Object(a.b)("p",null,"\u2022  ",Object(a.b)("strong",{parentName:"p"},"visualViewport"),": ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/webshell/docs/api/interfaces/domrectsize"}),"DOMRectSize")),Object(a.b)("p",null,"window.visualViewport.width and window.visualViewport.height"))}p.isMDXComponent=!0}}]);